{"version":3,"sources":["chrome/splitter.js"],"names":["define","$","store","jsbin","fn","splitter","$document","document","$blocker","$body","splitterSettings","JSON","parse","localStorage","getItem","this","each","$el","guid","$parent","parent","type","$prev","prevAll","nextAll","$handle","dragging","parentOffset","width","offset","top","left","props","x","currentPos","multiplier","cssProp","otherCssProp","size","sizeProp","moveProp","init","bottom","mobile","margin-left","height","right","opacity","position","cursor","border-left","z-index","y","border","settings","tracker","down","delta","track","timer","moveSplitter","pos","v","split","prevSize","elSize","css","setItem","stringify","clearTimeout","setTimeout","trigger","resetPrev","bind","event","pageX","pageY","target","targetType","Math","abs","remove","removeClass","originalEvent","touches","e","append","addClass","preventDefault","is","hide","length","undefined","data","before"],"mappings":"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","file":"../../chrome/splitter.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n   \"../jsbin\"\r\n],function ($,store,jsbin) {\r\n  $.fn.splitter = function () {\r\n    var $document = $(document),\r\n        $blocker = $('<div class=\"block\"></div>'),\r\n        $body = $('body');\r\n        // blockiframe = $blocker.find('iframe')[0];\r\n\r\n    var splitterSettings = JSON.parse(store.localStorage.getItem('splitterSettings') || '[]');\r\n    return this.each(function () {\r\n      var $el = $(this),\r\n          $originalContainer = $(this),\r\n          guid = $.fn.splitter.guid++,\r\n          $parent = $el.parent(),\r\n          type = 'x',\r\n          $prev = type === 'x' ? $el.prevAll(':visible:first') : $el.nextAll(':visible:first'),\r\n          $handle = $('<div class=\"resize\"></div>'),\r\n          dragging = false,\r\n          width = $parent.width(),\r\n          parentOffset = $parent.offset(),\r\n          left = parentOffset.left,\r\n          top = parentOffset.top, // usually zero :(\r\n          props = {\r\n            x: {\r\n              currentPos: $parent.offset().left,\r\n              multiplier: 1,\r\n              cssProp: 'left',\r\n              otherCssProp: 'right',\r\n              size: $parent.width(),\r\n              sizeProp: 'width',\r\n              moveProp: 'pageX',\r\n              init: {\r\n                top: 0,\r\n                bottom: 0,\r\n                width: jsbin.mobile ? 44 : 8,\r\n                'margin-left': jsbin.mobile ? '-22px' : '-4px',\r\n                height: '100%',\r\n                left: 'auto',\r\n                right: 'auto',\r\n                opacity: 0,\r\n                position: 'absolute',\r\n                cursor: 'ew-resize',\r\n                // 'border-top': '0',\r\n                'border-left': '1px solid rgba(218, 218, 218, 0.5)',\r\n                'z-index': 99999\r\n              }\r\n            },\r\n            y: {\r\n              currentPos: $parent.offset().top,\r\n              multiplier: -1,\r\n              size: $parent.height(),\r\n              cssProp: 'bottom',\r\n              otherCssProp: 'top',\r\n              sizeProp: 'height',\r\n              moveProp: 'pageY',\r\n              init: {\r\n                top: 'auto',\r\n                cursor: 'ns-resize',\r\n                bottom: 'auto',\r\n                height: 8,\r\n                width: '100%',\r\n                left: 0,\r\n                right: 0,\r\n                opacity: 0,\r\n                position: 'absolute',\r\n                border: 0,\r\n                // 'border-top': '1px solid rgba(218, 218, 218, 0.5)',\r\n                'z-index': 99999\r\n              }\r\n            }\r\n          },\r\n          refreshTimer = null,\r\n          settings = splitterSettings[guid] || {};\r\n\r\n      var tracker = {\r\n        down: { x: null, y: null },\r\n        delta: { x: null, y: null },\r\n        track: false,\r\n        timer: null\r\n      };\r\n      $handle.bind('mousedown', function (event) {\r\n        tracker.down.x = event.pageX;\r\n        tracker.down.y = event.pageY;\r\n        tracker.delta = { x: null, y: null };\r\n        tracker.target = $handle[type == 'x' ? 'height' : 'width']() * 0.25;\r\n      });\r\n\r\n      $document.bind('mousemove', function (event) {\r\n        if (dragging) {\r\n          tracker.delta.x = tracker.down.x - event.pageX;\r\n          tracker.delta.y = tracker.down.y - event.pageY;\r\n          clearTimeout(tracker.timer);\r\n          tracker.timer = setTimeout(function () {\r\n            tracker.down.x = event.pageX;\r\n            tracker.down.y = event.pageY;\r\n          }, 250);\r\n          var targetType = type == 'x' ? 'y' : 'x';\r\n          if (Math.abs(tracker.delta[targetType]) > tracker.target) {\r\n            $handle.trigger('change', targetType, event[props[targetType].moveProp]);\r\n            tracker.down.x = event.pageX;\r\n            tracker.down.y = event.pageY;\r\n          }\r\n        }\r\n      });\r\n\r\n      function moveSplitter(pos) {\r\n        if (type === 'y') {\r\n          pos -= top;\r\n        }\r\n        var v = pos - props[type].currentPos,\r\n            split = 100 / props[type].size * v,\r\n            delta = (pos - settings[type]) * props[type].multiplier,\r\n            prevSize = $prev[props[type].sizeProp](),\r\n            elSize = $el[props[type].sizeProp]();\r\n\r\n        if (type === 'y') {\r\n          split = 100 - split;\r\n        }\r\n\r\n        // if prev panel is too small and delta is negative, block\r\n        if (prevSize < 100 && delta < 0) {\r\n          // ignore\r\n        } else if (elSize < 100 && delta > 0) {\r\n          // ignore\r\n        } else {\r\n          // allow sizing to happen\r\n          $el.css(props[type].cssProp, split + '%');\r\n          $prev.css(props[type].otherCssProp, (100 - split) + '%');\r\n          var css = {};\r\n          css[props[type].cssProp] = split + '%';\r\n          $handle.css(css);\r\n          settings[type] = pos;\r\n          splitterSettings[guid] = settings;\r\n          store.localStorage.setItem('splitterSettings', JSON.stringify(splitterSettings));\r\n\r\n          // wait until animations have completed!\r\n          if (moveSplitter.timer) clearTimeout(moveSplitter.timer);\r\n          moveSplitter.timer = setTimeout(function () {\r\n            $document.trigger('sizeeditors');\r\n          }, 120);\r\n        }\r\n      }\r\n\r\n      function resetPrev() {\r\n        $prev = type === 'x' ? $handle.prevAll(':visible:first') : $handle.nextAll(':visible:first');\r\n      }\r\n\r\n      $document.bind('mouseup touchend', function () {\r\n        if (dragging) {\r\n          dragging = false;\r\n          $blocker.remove();\r\n          // $handle.css( 'opacity', '0');\r\n          $body.removeClass('dragging');\r\n        }\r\n      }).bind('mousemove touchmove', function (event) {\r\n        if (dragging) {\r\n          moveSplitter(event[props[type].moveProp] || event.originalEvent.touches[0][props[type].moveProp]);\r\n        }\r\n      });\r\n\r\n      $blocker.bind('mousemove touchmove', function (event) {\r\n        if (dragging) {\r\n          moveSplitter(event[props[type].moveProp] || event.originalEvent.touches[0][props[type].moveProp]);\r\n        }\r\n      });\r\n\r\n      $handle.bind('mousedown touchstart', function (e) {\r\n        dragging = true;\r\n        $body.append($blocker).addClass('dragging');\r\n        props[type].size = $parent[props[type].sizeProp]();\r\n        props[type].currentPos = 0; // is this really required then?\r\n\r\n        resetPrev();\r\n        e.preventDefault();\r\n      });\r\n\r\n      /*\r\n      .hover(function () {\r\n        $handle.css('opacity', '1');\r\n      }, function () {\r\n        if (!dragging) {\r\n          $handle.css('opacity', '0');\r\n        }\r\n      })\r\n    */\r\n\r\n      $handle.bind('init', function (event, x) {\r\n        $handle.css(props[type].init);\r\n        props[type].size = $parent[props[type].sizeProp]();\r\n        resetPrev();\r\n\r\n        // can only be read at init\r\n        top = $parent.offset().top;\r\n\r\n        $blocker.css('cursor', type == 'x' ? 'ew-resize' : 'ns-resize');\r\n\r\n        if (type == 'y') {\r\n          $el.css('border-right', 0);\r\n          $prev.css('border-left', 0);\r\n          $prev.css('border-top', '2px solid #ccc');\r\n        } else {\r\n          // $el.css('border-right', '1px solid #ccc');\r\n          $el.css('border-top', 0);\r\n          // $prev.css('border-right', '2px solid #ccc');\r\n        }\r\n\r\n        if ($el.is(':hidden')) {\r\n          $handle.hide();\r\n        } else {\r\n          if ($prev.length) {\r\n            $el.css('border-' + props[type].cssProp, '1px solid #ccc');\r\n          } else {\r\n            $el.css('border-' + props[type].cssProp, '0');\r\n          }\r\n          moveSplitter(x !== undefined ? x : $el.offset()[props[type].cssProp]);\r\n        }\r\n      }); //.trigger('init', settings.x || $el.offset().left);\r\n\r\n      $prev.css('width', 'auto');\r\n      $prev.css('height', 'auto');\r\n      $el.data('splitter', $handle);\r\n      $el.before($handle);\r\n\r\n      // if (settings.y) {\r\n      //   $handle.trigger('change', 'y');\r\n      // }\r\n    });\r\n  };\r\n\r\n  $.fn.splitter.guid = 0;\r\n});"]}