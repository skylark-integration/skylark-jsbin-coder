{"version":3,"sources":["editors/mobileCodeMirror.js"],"names":["define","$","jsbin","CodeMirror","noop","rootClassName","document","body","className","oldCodeMirror","settings","editor","simple","mobile","tablet","indexOf","addClass","re","lameEditor","setCursor","sPos","ePos","field","this","textarea","value","setSelectionRange","createTextRange","range","collapse","length","moveEnd","moveStart","select","insert","from","to","undefined","getCursor","selectionEnd","selectionStart","posFromIndex","lines","split","line","substring","ch","join","endPos","slice","call","Editor","el","options","win","ready","wrapping","createElement","textareaParent","parentNode","appendChild","style","opacity","eventName","old","update","$document","trigger","panelId","id","on","throttle","$body","removeClass","hideOpen","completionIndex","initCallback","commands","__update","completionCache","lastToken","key","prototype","_hasCompletions","_completionIndex","_showCompletion","completions","token","console","log","pos","i","indexFromPos","substr","string","cursorCoords","getCaretCoordinates","bottom","top","replaceRange","apply","arguments","getMode","mode","Pos","getWrapperElement","getScrollerElement","setOption","type","handler","change","setCode","code","getOption","getCode","getLine","n","getValue","setValue","focus","p","cursorPosition","character","char","getTokenAt","start","replace","m","trim","end","exec","index","test","state","currentLine","defaultTextHeight","highlightLines","removeKeyMap","addKeyMap","indentLine","startOffset","nthLine","refresh","selectLines","somethingSelected","getRange","getModeAt","name","setSelections","sel","anchor","head","listSelections","operation","fn","forEach","fromTextArea","keyMap","basic","enableMobileMirror"],"mappings":"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","file":"../../editors/mobileCodeMirror.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n   \"../jsbin\",\r\n   \"./codemirror\"\r\n],function ($,jsbin,CodeMirror) {\r\n  /* globals jsbin, throttle, $, $body, CodeMirror, $document */\r\n  var noop = function () {};\r\n  var rootClassName = document.body.className;\r\n  var oldCodeMirror = null;\r\n\r\n  var simple = jsbin.settings.editor && jsbin.settings.editor.simple;\r\n\r\n  if (simple ||\r\n      jsbin.mobile ||\r\n      jsbin.tablet ||\r\n      rootClassName.indexOf('ie6') !== -1 ||\r\n      rootClassName.indexOf('ie7') !== -1) {\r\n    $('body').addClass('mobile');\r\n    enableMobileMirror();\r\n  }\r\n\r\n  function enableMobileMirror() {\r\n    var re = /\\b./g;\r\n    jsbin.lameEditor = true;\r\n\r\n    var setCursor = function (sPos, ePos) {\r\n      if (!ePos) {\r\n        ePos = sPos;\r\n      }\r\n      var field = this.textarea;\r\n      var value = field.value;\r\n      field.value = ''; // hack to reset the cursor position\r\n      field.value = value;\r\n      if (field.setSelectionRange) {\r\n        field.setSelectionRange(sPos, ePos);\r\n      } else if (field.createTextRange) {\r\n        var range = field.createTextRange();\r\n        range.collapse(true);\r\n        if (sPos < 0) {\r\n          sPos = field.value.length + sPos;\r\n        }\r\n        range.moveEnd('character', ePos);\r\n        range.moveStart('character', sPos);\r\n        range.select();\r\n      }\r\n    }\r\n\r\n    var insert = function (value, from, to) {\r\n      var field = this.textarea;\r\n      if (value === undefined || value === null) {\r\n        value = '';\r\n      }\r\n\r\n      if (!from) {\r\n        from = this.getCursor();\r\n      }\r\n\r\n      if (!to) {\r\n        to = from;\r\n        if (this.textarea.selectionEnd !== this.textarea.selectionStart) {\r\n          to = this.posFromIndex(this.textarea.selectionEnd);\r\n        }\r\n      }\r\n\r\n      var prev = field.value;\r\n      var lines = field.value.split('\\n');\r\n      var line = lines[from.line];\r\n      line = line.substring(0, from.ch) + value + line.substring(to.ch);\r\n      lines[from.line] = line;\r\n\r\n      field.value = lines.join('\\n');\r\n\r\n      var endPos = lines.slice(0, from.line).join('\\n').length + 1 + from.ch + value.length; // +1 for missing ln\r\n      //lines.slice(0, from.line - 1).join('\\n').length + value.length + to.ch - 1;\r\n\r\n      setCursor.call({ textarea: field }, endPos);\r\n    };\r\n\r\n    var Editor = function (el, options) {\r\n      this.textarea = el;\r\n      this.win = { document: this.textarea };\r\n      this.ready = true;\r\n      this.wrapping = document.createElement('div');\r\n\r\n      var textareaParent = this.textarea.parentNode;\r\n      this.wrapping.appendChild(this.textarea);\r\n      textareaParent.appendChild(this.wrapping);\r\n\r\n      this.textarea.style.opacity = 1;\r\n      // this.textarea.style.width = '100%';\r\n\r\n      var eventName = jsbin.mobile || jsbin.tablet ? 'blur' : 'keyup';\r\n      var old = null;\r\n\r\n      var update = function () {\r\n        if (old !== el.value) {\r\n          old = el.value;\r\n          $document.trigger('codeChange', { panelId: el.id });\r\n        }\r\n      };\r\n\r\n      $document.on('jsbinReady', function () {\r\n        old = el.value;\r\n      });\r\n\r\n      $(this.textarea)\r\n        .on(eventName, throttle(function () {\r\n          update();\r\n          $body.removeClass('editor-focus');\r\n        }, 200))\r\n        .on('focus', function () {\r\n          hideOpen();\r\n          $body.addClass('editor-focus');\r\n        })\r\n        .on('touchstart', function () {\r\n          completionIndex = -1; // reset the completion\r\n        })\r\n        .on('keypress', function () {\r\n          completionIndex = -1; // reset the completion\r\n        });\r\n\r\n      if (options.initCallback) {\r\n        $(options.initCallback);\r\n      }\r\n\r\n      this.commands = {};\r\n      this.options = options;\r\n\r\n      this.__update = update;\r\n    };\r\n\r\n    var completionIndex = -1;\r\n    var completionCache = [];\r\n    var lastToken = null;\r\n\r\n    Editor.prototype = {\r\n      _hasCompletions: function () {\r\n        return completionIndex !== -1;\r\n      },\r\n      _completionIndex: completionIndex,\r\n      _showCompletion: function (completions, token) {\r\n        if (completionIndex === -1) {\r\n          // reset\r\n          console.log(completions);\r\n          completionCache = completions;\r\n          lastToken = token;\r\n          console.log(token);\r\n        }\r\n\r\n        // else, show the next completion\r\n        completionIndex++;\r\n        if (completionIndex >= completionCache.length) {\r\n          completionIndex = 0;\r\n        }\r\n        var pos = this.getCursor();\r\n        var i = this.indexFromPos(pos);\r\n        var value = completionCache[completionIndex].substr(lastToken.string.length);\r\n        insert.call(this, value);\r\n        this.setCursor(i, i + value.length); // highlight the section\r\n\r\n        return;\r\n      },\r\n      cursorCoords: function (from) {\r\n        var pos = getCaretCoordinates(this.textarea, this.textarea.selectionEnd);\r\n        pos.bottom = pos.top; // hack for CM\r\n        return pos;\r\n      },\r\n      replaceRange: function () {\r\n        this._completionIndex = -1;\r\n        return insert.apply(this, arguments);\r\n      },\r\n      getMode: function () {\r\n        return this.options.mode;\r\n      },\r\n      Pos: function (line, ch) {\r\n        return {\r\n          line: line,\r\n          ch: ch,\r\n        };\r\n      },\r\n      getWrapperElement: function () {\r\n        return this.wrapping;\r\n      },\r\n      getScrollerElement: function () {\r\n        return this.textarea;\r\n      },\r\n      setOption: function (type, handler) {\r\n        if (type === 'onChange') {\r\n          $(this.textarea).change(handler);\r\n        }\r\n      },\r\n      setCode: function (code) {\r\n        this.textarea.value = code;\r\n      },\r\n      getOption: noop,\r\n      getCode: function () {\r\n        return this.textarea.value;\r\n      },\r\n      getLine: function (n) {\r\n        return this.textarea.value.split('\\n')[n - 1];\r\n      },\r\n      getValue: function () {\r\n        return this.textarea.value;\r\n      },\r\n      setValue: function (code)  {\r\n        this.textarea.value = code;\r\n      },\r\n      focus: function () {\r\n        this.textarea.focus();\r\n      },\r\n      getCursor: function () {\r\n        var p = this.cursorPosition().character;\r\n        var lines = this.textarea.value.substring(0, p).split('\\n');\r\n        var line = lines.length - 1;\r\n        var char = lines[line].length;\r\n        return {\r\n          line: line,\r\n          char: char,\r\n          ch: char,\r\n        };\r\n      },\r\n      getTokenAt: function (pos) {\r\n        var line = this.textarea.value.split('\\n')[pos.line];\r\n        var frag = line.substr(0, pos.char);\r\n        var start = -1;\r\n        line.replace(re, function (m, i) {\r\n          if (line.substr(i).trim()) { // ignore the end of the line\r\n            start = i;\r\n          }\r\n        });\r\n\r\n        //var start = (re.exec(line.substr(0, pos.char)) || { index: -1 }).index + 1;\r\n        var end = (re.exec(line.substr(pos.char)) || { index: line.length }).index;\r\n        var string = line.substr(start, end);\r\n\r\n        // TODO validate string is made up entirely of \\w characters\r\n        if (!(/^\\w+$/g).test(string)) {\r\n          string = '';\r\n        }\r\n\r\n        return {\r\n          start: start,\r\n          end: end,\r\n          string: string.trim(),\r\n          type: 'variable',\r\n          state: {\r\n            mode: this.options.mode,\r\n          },\r\n        };\r\n      },\r\n      setCursor: setCursor,\r\n      currentLine: function () {\r\n        return 0;\r\n      },\r\n      defaultTextHeight: function () {\r\n        return 16;\r\n      },\r\n      highlightLines: function () {\r\n        return {\r\n          string: '',\r\n        };\r\n      },\r\n      removeKeyMap: noop,\r\n      addKeyMap: noop,\r\n      indentLine: noop,\r\n      cursorPosition: function () {\r\n        var character = 0;\r\n        if (this.textarea.selectionStart) {\r\n          character = this.textarea.selectionStart;\r\n        } else if (this.textarea.createTextRange) {\r\n          var range = this.textarea.createTextRange();\r\n          character = range.startOffset;\r\n        }\r\n        return { character: character };\r\n      },\r\n      nthLine: noop,\r\n      refresh: noop,\r\n      selectLines: noop,\r\n      on: noop,\r\n      somethingSelected: noop,\r\n      indexFromPos: function (pos) {\r\n        var lines = this.textarea.value.split('\\n');\r\n        return lines.slice(0, pos.line).join('').length + pos.ch + pos.line;\r\n      },\r\n      posFromIndex: function (i) {\r\n        var lines = this.textarea.value.substr(0, i).split('\\n');\r\n        var line = lines.length - 1;\r\n        return {\r\n          line: line,\r\n          ch: lines[line].length,\r\n        };\r\n      },\r\n      getRange: function (start, end) {\r\n        return this.textarea.value.substring(this.indexFromPos(start), this.indexFromPos(end));\r\n      },\r\n      getModeAt: function () {\r\n        var name = this.options.mode;\r\n        if (name === 'htmlmixed') {\r\n          name = 'html';\r\n        }\r\n        return { name: name };\r\n      },\r\n      setSelections: function (sel) {\r\n        setCursor.call(this, this.indexFromPos(sel[0].anchor), this.indexFromPos(sel[0].head));\r\n      },\r\n      listSelections: function () {\r\n        return [{\r\n          head: this.getCursor(),\r\n          anchor: this.getCursor(),\r\n        }];\r\n      },\r\n      operation: function (fn) {\r\n        fn();\r\n        // return fn;\r\n      }\r\n    };\r\n\r\n    oldCodeMirror = CodeMirror;\r\n    CodeMirror = noop;\r\n\r\n    for (var key in oldCodeMirror) {\r\n      CodeMirror[key] = noop;\r\n    }\r\n\r\n    // copy across some useful stuff\r\n    ['Pass', 'hint', 'snippets', 'execCommand', 'simpleHint', 'commands'].forEach(function (key) {\r\n      CodeMirror[key] = oldCodeMirror[key];\r\n    });\r\n\r\n    CodeMirror.fromTextArea = function (el, options) {\r\n      return new Editor(el, options);\r\n    };\r\n\r\n    CodeMirror.keyMap = { basic: {} };\r\n  }\r\n});"]}