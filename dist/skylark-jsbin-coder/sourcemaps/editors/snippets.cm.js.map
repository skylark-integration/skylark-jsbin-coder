{"version":3,"sources":["editors/snippets.cm.js"],"names":["define","$","jsbin","coder","CodeMirror","defaults","cl","fn","snippets","cm","pos","getCursor","tok","getTokenAt","targetCursorPos","macro","tagName","string","settings","end","ch","slice","length","key","toLowerCase","indexOf","replace","replaceRange","line","setCursor","Pass","editors"],"mappings":";;;;;;;AACAA,QACE,iBACC,WACA,WACA,gBACD,SAAUC,EAAEC,EAAMC,EAAMC,GACxB,aACA,IAAIC,GACAC,GAAI,qBACJC,GAAI,0BA6BR,OA1BAH,EAAWI,SAAW,SAASC,GAC7B,IAAIC,EAAMD,EAAGE,YACTC,EAAMH,EAAGI,WAAWH,GACpBI,GAAmB,EACnBC,EAAQ,GACRC,EAAUJ,EAAIK,OACdT,EAAWN,EAAMgB,SAASV,UAAYH,EAEtCO,EAAIO,IAAMT,EAAIU,KAChBJ,EAAUA,EAAQK,MAAM,EAAGL,EAAQM,OAASV,EAAIO,IAAMT,EAAIU,KAE5D,IAAIG,EAAMP,EAAQQ,cAElB,OAAIhB,EAASe,IACXT,EAAkBN,EAASe,GAAKE,QAAQ,MACxCV,EAAQP,EAASe,GAAKG,QAAQ,MAAO,IACrCjB,EAAGkB,aAAaZ,GAAOa,KAAMlB,EAAIkB,KAAMR,GAAIV,EAAIU,GAAKG,EAAID,SAAUM,KAAMlB,EAAIkB,KAAMR,GAAIV,EAAIU,GAAKG,EAAID,eAE1E,IAArBR,GACFL,EAAGoB,WAAYD,KAAMlB,EAAIkB,KAAMR,GAAIV,EAAIU,GAAKG,EAAID,OAASR,MAItDV,EAAW0B,MAGb3B,EAAM4B,QAAQvB,SAAWJ,EAAWI","file":"../../editors/snippets.cm.js","sourcesContent":["/*global jsbin:true, CodeMirror:true */\r\ndefine([\r\n  \"skylark-jquery\",\r\n   \"../jsbin\",\r\n   \"../coder\",\r\n   \"./codemirror\"\r\n],function ($,jsbin,coder,CodeMirror) {\r\n  'use strict';\r\n  var defaults = {\r\n      cl: 'console.log(\\'$0\\');',\r\n      fn: 'function $0() {\\n\\t\\n}'\r\n    };\r\n\r\n  CodeMirror.snippets = function(cm) {\r\n    var pos = cm.getCursor(),\r\n        tok = cm.getTokenAt(pos),\r\n        targetCursorPos = -1,\r\n        macro = '',\r\n        tagName = tok.string,\r\n        snippets = jsbin.settings.snippets || defaults;\r\n\r\n    if (tok.end > pos.ch) {\r\n      tagName = tagName.slice(0, tagName.length - tok.end + pos.ch);\r\n    }\r\n    var key = tagName.toLowerCase();\r\n\r\n    if (snippets[key]) {\r\n      targetCursorPos = snippets[key].indexOf('$0');\r\n      macro = snippets[key].replace(/\\$0/, '');\r\n      cm.replaceRange(macro,{line: pos.line, ch: pos.ch - key.length}, {line: pos.line, ch: pos.ch + key.length});\r\n\r\n      if (targetCursorPos !== -1) {\r\n        cm.setCursor({ line: pos.line, ch: pos.ch - key.length + targetCursorPos });\r\n      }\r\n      return;\r\n    }\r\n    return CodeMirror.Pass;\r\n  };\r\n\r\n  return coder.editors.snippets = CodeMirror.snippets;\r\n});"]}