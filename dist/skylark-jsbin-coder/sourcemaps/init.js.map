{"version":3,"sources":["init.js"],"names":["define","jsconsole","renderer","coder","panels","snapshot","upgradeConsolePanel","init","window","e","testLocalStorage","addEventListener","watchForSnapshots","deferredLiveRender","$document","bind","codeChangeLive","event","data","clearTimeout","editor","line","panel","named","live","ready","jsbin","settings","includejs","panelId","visible","lameEditor","focused","id","getLine","getCursor","ignoreDuringLive","test","setTimeout","renderLivePreview","document","getElementById","console","$live","$"],"mappings":";;;;;;;AAAAA,QACC,wBACA,yBACA,UACA,mBACA,qBACA,gCACC,SAASC,EAAUC,EAASC,EAAMC,EAAOC,EAASC,GA+EnD,OAAOH,EAAMI,KA7Eb,YAEC,WACC,aACA,IACC,GAAI,iBAAkBC,QAAqC,OAA3BA,OAAqB,aACpD,OAAO,EAEP,MAAMC,GACP,OAAO,IAILC,IAAsBF,OAAOG,kBAChCN,EAASO,oBAsCT,IAIIC,EAAqB,KACzBC,UAAUC,KAAK,kBAtCf,SAASC,EAAeC,EAAOC,GAC7BC,aAAaN,GAEb,IAAIO,EACAC,EACAC,EAAQlB,EAAOmB,MAAMC,KAErBpB,EAAOqB,SACwB,IAA7BC,MAAMC,SAASC,WAAwC,eAAjBV,EAAKW,SAEpCP,EAAMQ,WAEVJ,MAAMK,YAAc3B,EAAO4B,SAAiC,eAAtB5B,EAAO4B,QAAQC,IAGxDZ,GADAD,EAAShB,EAAO4B,QAAQZ,QACVc,QAAQd,EAAOe,YAAYd,OACL,IAAhCe,iBAAiBC,KAAKhB,GAExBR,EAAqByB,WAAW,WAC9BtB,EAAeC,EAAOC,IACrB,KAEHd,EAAOmC,qBAGTnC,EAAOmC,wBAmBbtC,EAAUM,KAAKiC,SAASC,eAAe,WAEvCnC,EAAoBF,EAAOmB,MAAMmB,SAKjC,IAAIC,EAAQC,EAAE,SACFA,EAAE,aAAa,GAE1B1C,EAASK,KAAKoC","file":"../init.js","sourcesContent":["define([\r\n\t\"skylark-jsbin-console\",\r\n\t\"skylark-jsbin-renderer\",\r\n\t\"./coder\",\r\n\t\"./editors/panels\",\r\n\t\"./editors/snapshot\",\r\n\t\"./render/upgradeConsolePanel\"\r\n],function(jsconsole,renderer,coder,panels,snapshot,upgradeConsolePanel) {\r\n\r\n\tfunction init() {\r\n\t\t//snapshot\r\n\t\tfunction testLocalStorage() {\r\n\t\t\t'use strict';\r\n\t\t\ttry {\r\n\t\t\t\tif ('localStorage' in window && window['localStorage'] !== null) { // jshint ignore:line\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} catch(e){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (testLocalStorage() && window.addEventListener) {\r\n\t\t\tsnapshot.watchForSnapshots();\r\n\t\t}\r\n\r\n\r\n\t\t// from render/live.js\r\n\t  function codeChangeLive(event, data) {\r\n\t    clearTimeout(deferredLiveRender);\r\n\r\n\t    var editor,\r\n\t        line,\r\n\t        panel = panels.named.live;\r\n\r\n\t    if (panels.ready) {\r\n\t      if (jsbin.settings.includejs === false && data.panelId === 'javascript') {\r\n\t        // ignore\r\n\t      } else if (panel.visible) {\r\n\t        // test to see if they're write a while loop\r\n\t        if (!jsbin.lameEditor && panels.focused && panels.focused.id === 'javascript') {\r\n\t          // check the current line doesn't match a for or a while or a do - which could trip in to an infinite loop\r\n\t          editor = panels.focused.editor;\r\n\t          line = editor.getLine(editor.getCursor().line);\r\n\t          if (ignoreDuringLive.test(line) === true) {\r\n\t            // ignore\r\n\t            deferredLiveRender = setTimeout(function () {\r\n\t              codeChangeLive(event, data);\r\n\t            }, 1000);\r\n\t          } else {\r\n\t            panels.renderLivePreview();\r\n\t          }\r\n\t        } else {\r\n\t          panels.renderLivePreview();\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  }\r\n\r\n\t  // this needs to be after renderLivePreview is set (as it's defined using\r\n\t  // var instead of a first class function).\r\n\t  var liveScrollTop = null;\r\n\r\n\t  // timer value: used in the delayed render (because iframes don't have\r\n\t  // innerHeight/Width) in Chrome & WebKit\r\n\t  var deferredLiveRender = null;\r\n\t  $document.bind('codeChange.live', codeChangeLive);\r\n\r\n\r\n\t  // from render/console.js\r\n\t  var msgType = '';\r\n\r\n  \t  jsconsole.init(document.getElementById('output'));\r\n\r\n  \t  upgradeConsolePanel(panels.named.console);\r\n\r\n\r\n  \t  // from render/live.js\r\n\r\n  \t  var $live = $('#live'),\r\n      showlive = $('#showlive')[0];\r\n\r\n      renderer.init($live);\r\n\r\n\t}\r\n\r\n\treturn coder.init = init;\r\n\t\r\n});"]}