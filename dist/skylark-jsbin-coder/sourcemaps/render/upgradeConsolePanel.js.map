{"version":3,"sources":["render/upgradeConsolePanel.js"],"names":["define","jsconsole","$","jsbin","coder","panels","render","upgradeConsolePanel","console","setCursorTo","$el","click","event","target","closest","length","focus","reset","settings","withAlerts","renderLivePreview","show","clear","setTimeout","named","ready","embed","hide","live","visible","$document","one","hidebutton","this","on"],"mappings":";;;;;;;AAAAA,QACC,wBACC,iBACA,WACA,WACA,qBACA,SAASC,EAAUC,EAAEC,EAAMC,EAAMC,GA0EjC,OAAOD,EAAME,OAAOC,oBAvEpB,SAA6BC,GAC3BA,EAAQC,YAAcR,EAAUQ,YAChCD,EAAQE,IAAIC,MAAM,SAAUC,GACrBV,EAAEU,EAAMC,QAAQC,QAAQ,WAAWC,QACtCd,EAAUe,UAGdR,EAAQS,MAAQ,WACdhB,EAAUgB,SAEZT,EAAQU,SAASZ,OAAS,SAAUa,GA4BhCC,kBAAkBD,IAAc,IAGpCX,EAAQU,SAASG,KAAO,WACtBpB,EAAUqB,QAGVC,WAAW,WACLlB,EAAOmB,MAAMhB,QAAQiB,QAAUtB,EAAMuB,OAAOzB,EAAUe,SACzD,IAELR,EAAQU,SAASS,KAAO,WAGjBtB,EAAOmB,MAAMI,KAAKC,SAKzB1B,EAAM2B,UAAUC,IAAI,aAAc,WAChC,IAAIC,EAAa,WACf9B,EAAE,eAAe+B,KAAKJ,QAAU,OAAS,WAG3CxB,EAAOmB,MAAMI,KAAKM,GAAG,OAAQF,GAAYE,GAAG,OAAQF,GAEhD3B,EAAOmB,MAAMI,KAAKC,SACpB3B,EAAE,eAAeyB","file":"../../render/upgradeConsolePanel.js","sourcesContent":["define([\r\n\t\"skylark-jsbin-console\",\r\n  \"skylark-jquery\",\r\n  \"../jsbin\",\r\n  \"../coder\",\r\n  \"../editors/panels\"\r\n],function(jsconsole,$,jsbin,coder,panels){\r\n  // moved from render/console.js\r\n\r\n  function upgradeConsolePanel(console) {\r\n    console.setCursorTo = jsconsole.setCursorTo;\r\n    console.$el.click(function (event) {\r\n      if (!$(event.target).closest('#output').length) {\r\n        jsconsole.focus();\r\n      }\r\n    });\r\n    console.reset = function () {\r\n      jsconsole.reset();\r\n    };\r\n    console.settings.render = function (withAlerts) {\r\n      /*\r\n        // unnecessary ? //lwf\r\n      var html = panels.named.html.getCode().trim();\r\n      if (html === \"\") {\r\n        panels.named.javascript.render().then(function (echo) {\r\n          echo = echo.trim();\r\n          return getPreparedCode().then(function (code) {\r\n            code = code.replace(/<pre>/, '').replace(/<\\/pre>/, '');\r\n\r\n            setTimeout(function() {\r\n              jsconsole.run({\r\n                echo: echo,\r\n                cmd: code\r\n              });\r\n            }, 0);\r\n          });\r\n        }, function (error) {\r\n          console.warn('Failed to render JavaScript');\r\n          console.warn(error);\r\n        });\r\n\r\n        // Tell the iframe to reload\r\n        renderer.postMessage('render', {\r\n          source: '<html>'\r\n        });\r\n      } else {\r\n      */\r\n        renderLivePreview(withAlerts || false);\r\n      //}\r\n    };\r\n    console.settings.show = function () {\r\n      jsconsole.clear();\r\n      // renderLivePreview(true);\r\n      // setTimeout because the renderLivePreview creates the iframe after a timeout\r\n      setTimeout(function () {\r\n        if (panels.named.console.ready && !jsbin.embed) jsconsole.focus();\r\n      }, 0);\r\n    };\r\n    console.settings.hide = function () {\r\n      // Removal code is commented out so that the\r\n      // output iframe is never removed\r\n      if (!panels.named.live.visible) {\r\n        // $live.find('iframe').remove();\r\n      }\r\n    };\r\n\r\n    jsbin.$document.one('jsbinReady', function () {\r\n      var hidebutton = function () {\r\n        $('#runconsole')[this.visible ? 'hide' : 'show']();\r\n      };\r\n\r\n      panels.named.live.on('show', hidebutton).on('hide', hidebutton);\r\n\r\n      if (panels.named.live.visible) {\r\n        $('#runconsole').hide();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  return coder.render.upgradeConsolePanel = upgradeConsolePanel;\r\n});"]}