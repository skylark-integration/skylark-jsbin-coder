{"version":3,"sources":["render/renderLivePreview.js"],"names":["define","langx","$","store","jsbin","coder","getRenderedCode","render","renderLivePreview","requested","window","postMessage","saveChecksum","ajax","url","getURL","data","code","state","revision","checksum","type","hasBody","then","codes","settings","includejs","visiblePanels","panels","getVisible","outputPanelOpen","indexOf","named","live","consolePanelOpen","console","sessionStorage","setItem","renderer","options","injectCSS","focused","id","debug","includeJsInRealtime"],"mappings":";;;;;;;AAAAA,QACE,gBACA,iBACA,6BACC,UACA,WACA,qBACD,SAAUC,EAAMC,EAAEC,EAAMC,EAAMC,EAAMC,GAqFrC,OAAOD,EAAME,OAAOC,kBAxCK,SAAUC,GAE3BC,OAAOC,cAGRF,IAvCAL,EAAMQ,cACRV,EAAEW,MACAC,IAAKV,EAAMW,SAAW,UACtBC,MACEC,KAAMb,EAAMc,MAAMD,KAClBE,SAAUf,EAAMc,MAAMC,SACtBC,SAAUhB,EAAMQ,cAElBS,KAAM,SAiCRjB,EAAMc,MAAMI,SAAU,GAExBhB,IAAkBiB,KAAK,SAAUC,GACLpB,EAAMqB,SAASC,UAAzC,IAGIC,EAAgBvB,EAAMwB,OAAOC,aAC7BC,EAAkBH,EAAcI,QAAQ3B,EAAMwB,OAAOI,MAAMC,OAAS,EACpEC,EAAmBP,EAAcI,QAAQ3B,EAAMwB,OAAOI,MAAMG,UAAY,GACvEL,GAAoBI,KAIrB9B,EAAMqB,SAASC,WACjBvB,EAAMiC,eAAeC,QAAQ,gBAAiB,GAGhDC,SAAS3B,YAAY,UAEnBa,MAAQA,EACRe,SACEC,UAAWpC,EAAMc,MAAMI,SAAuC,QAA5BlB,EAAMwB,OAAOa,QAAQC,GACvDjC,UAAWA,EACXkC,MAAOvC,EAAMqB,SAASkB,MACtBC,oBAAqBxC,EAAMqB,SAASC,aAIxCtB,EAAMc,MAAMI,SAAU","file":"../../render/renderLivePreview.js","sourcesContent":["define([\r\n  \"skylark-langx\",\r\n  \"skylark-jquery\",\r\n  \"skylark-jsbin-base/storage\",\r\n   \"./jsbin\",\r\n   \"../coder\",\r\n   \"./getRenderedCode\"\r\n],function (langx,$,store,jsbin,coder,getRenderedCode) {\r\n  // moved from render/live.js\r\n  \r\n\r\n  /**\r\n   * =============================================================================\r\n   * =============================================================================\r\n   * =============================================================================\r\n   */\r\n\r\n  function sendReload() {\r\n    if (jsbin.saveChecksum) {\r\n      $.ajax({\r\n        url: jsbin.getURL() + '/reload',\r\n        data: {\r\n          code: jsbin.state.code,\r\n          revision: jsbin.state.revision,\r\n          checksum: jsbin.saveChecksum\r\n        },\r\n        type: 'post'\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /** ============================================================================\r\n   * Live rendering.\r\n   *\r\n   * Comes in two tasty flavours. Basic mode, which is essentially an IE7\r\n   * fallback. Take a look at https://github.com/jsbin/jsbin/issues/651 for more.\r\n   * It uses the iframe's name and JS Bin's event-stream support to keep the\r\n   * page up-to-date.\r\n   *\r\n   * The second mode uses postMessage to inform the runner of changes to code,\r\n   * config and anything that affects rendering, and also listens for messages\r\n   * coming back to update the JS Bin UI.\r\n   * ========================================================================== */\r\n\r\n  /**\r\n   * Render live preview.\r\n   * Create the runner iframe, and if postMe wait until the iframe is loaded to\r\n   * start postMessaging the runner.\r\n   */\r\n\r\n  // The big daddy that handles postmessaging the runner.\r\n  var renderLivePreview = function (requested) {\r\n    // No postMessage? Don't render â€“ the event-stream will handle it.\r\n    if (!window.postMessage) { return; }\r\n\r\n    // Inform other pages event streaming render to reload\r\n    if (requested) {\r\n      sendReload();\r\n      jsbin.state.hasBody = false;\r\n    }\r\n    getRenderedCode().then(function (codes) { // modified by lwf\r\n      var includeJsInRealtime = jsbin.settings.includejs;\r\n\r\n      // Tell the iframe to reload\r\n      var visiblePanels = jsbin.panels.getVisible();\r\n      var outputPanelOpen = visiblePanels.indexOf(jsbin.panels.named.live) > -1;\r\n      var consolePanelOpen = visiblePanels.indexOf(jsbin.panels.named.console) > -1;\r\n      if (!outputPanelOpen && !consolePanelOpen) {\r\n        return;\r\n      }\r\n      // this is a flag that helps detect crashed runners\r\n      if (jsbin.settings.includejs) {\r\n        store.sessionStorage.setItem('runnerPending', 1);\r\n      }\r\n\r\n      renderer.postMessage('render', {\r\n        //source: source,\r\n        codes : codes, // modified by lwf\r\n        options: {\r\n          injectCSS: jsbin.state.hasBody && jsbin.panels.focused.id === 'css',\r\n          requested: requested,\r\n          debug: jsbin.settings.debug,\r\n          includeJsInRealtime: jsbin.settings.includejs,\r\n        },\r\n      });\r\n\r\n      jsbin.state.hasBody = true;\r\n\r\n    });\r\n  };\r\n\r\n return coder.render.renderLivePreview = renderLivePreview;\r\n\r\n});"]}